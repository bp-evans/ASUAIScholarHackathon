'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _utils = require('./utils');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Document = function () {
  function Document(url) {
    _classCallCheck(this, Document);

    this.data = undefined;

    if (!url) {
      throw new TypeError('Document::constructor - You must pass a URL.');
    }

    this.url = url;
  }

  _createClass(Document, [{
    key: 'get',
    value: function get(fields) {
      return (0, _utils.extractNested)(this.data, fields);
    }
  }, {
    key: 'fetch',
    value: function fetch() {
      var _this = this;

      return new Promise(function (resolve, reject) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', _this.url);
        xhr.onload = function () {
          var response = JSON.parse(xhr.responseText);
          if (response.data) {
            _this.data = response.data;
          }

          resolve();
        };
        xhr.onerror = function () {
          return reject(xhr.statusText);
        };
        xhr.send();
      }).catch(function (error) {
        console.error(error);
      });
    }
  }]);

  return Document;
}();

exports.default = Document;