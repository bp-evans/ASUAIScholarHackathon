"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GoogleAuth = require("google-auth-library");
var utils = require("../utils/utils");
var GOOGLE_AUTH_SCOPES = ["https://www.googleapis.com/auth/spreadsheets"];
var ServiceAccount = (function () {
    function ServiceAccount(creds, googleAuthScopes) {
        if (googleAuthScopes === void 0) { googleAuthScopes = GOOGLE_AUTH_SCOPES; }
        this.googleAuth = new GoogleAuth();
        this.JWTClient = new this.googleAuth.JWT(creds.client_email, null, creds.private_key, googleAuthScopes, null);
        this.token = null;
    }
    Object.defineProperty(ServiceAccount.prototype, "authClient", {
        get: function () {
            return this.JWTClient;
        },
        enumerable: true,
        configurable: true
    });
    ServiceAccount.prototype.authorize = function (callback) {
        var _this = this;
        if (callback === void 0) { callback = utils.noop; }
        this.JWTClient.authorize(function (err, token) {
            if (err) {
                return callback(err);
            }
            _this.token = token;
            return callback(err, _this.authClient);
        });
    };
    ServiceAccount.prototype.isAuthorized = function () {
        return !!this.token && this.token.expiry_date > +(new Date());
    };
    ServiceAccount.prototype.ensureValid = function (callback) {
        if (callback === void 0) { callback = utils.noop; }
        if (!this.isAuthorized()) {
            return this.authorize(callback);
        }
        callback(null, this.authClient);
    };
    return ServiceAccount;
}());
exports.ServiceAccount = ServiceAccount;
//# sourceMappingURL=service-account.js.map